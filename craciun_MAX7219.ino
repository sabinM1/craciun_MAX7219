// Including the required Arduino libraries
#include "MD_MAX72xx.h"

// Initialization
#define HARDWARE_TYPE MD_MAX72XX::GENERIC_HW
#define MAX_DEVICES 15 //this example is using only 6
#define CS_PIN 4
#define DATA_PIN 5
#define CLK_PIN 18
MD_MAX72XX mx = MD_MAX72XX(HARDWARE_TYPE, DATA_PIN, CLK_PIN, CS_PIN, MAX_DEVICES);


uint32_t prevTimeAnim1 = 0;
uint32_t prevTimeAnim2 = 0;

void f1(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 1111, 10010, 110111, 1110101, 1110000, 1111111, 11000},
		{0, 11111111, 10011, 10011, 110011, 0, 11111111, 1100},
		{0, 11111111, 110001, 10011, 110010, 0, 11111111, 1100},
		{0, 11111111, 11001, 10001001, 10011001, 0, 11111111, 1100},
		{0, 11111110, 10011010, 10001010, 10011010, 10, 11111110, 1100},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

void f2(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111, 100100, 1101110, 11101010, 11100000, 11111111, 110000},
		{0, 11111111, 100110, 100110, 1100110, 0, 11111111, 11000},
		{0, 11111111, 1100010, 100111, 1100101, 0, 11111111, 11000},
		{0, 11111111, 110011, 10011, 110011, 0, 11111111, 11000},
		{0, 11111100, 110100, 10100, 110100, 100, 11111100, 11000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f3(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 111111, 1001000, 11011100, 11010100, 11000000, 11111111, 1100000},
		{0, 11111111, 1001100, 1001100, 11001100, 0, 11111111, 110000},
		{0, 11111111, 11000100, 1001110, 11001010, 0, 11111111, 110000},
		{0, 11111111, 1100110, 100110, 1100110, 0, 11111111, 110000},
		{0, 11111000, 1101000, 101000, 1101001, 1001, 11111001, 110000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f4(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 1111111, 10010000, 10111000, 10101001, 10000000, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 1100000},
		{0, 11111111, 10001000, 10011100, 10010100, 0, 11111111, 1100000},
		{0, 11111111, 11001100, 1001100, 11001100, 0, 11111111, 1100000},
		{0, 11110000, 11010000, 1010001, 11010011, 10011, 11110011, 1100000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f5(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 100001, 1110001, 1010011, 0, 11111111, 10000000},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 11000000},
		{0, 11111111, 10001, 111000, 101001, 0, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 11000000},
		{0, 11100000, 10100001, 10100011, 10100111, 100111, 11100111, 11000001},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f6(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1000010, 11100010, 10100110, 0, 11111111, 1},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 10000001},
		{0, 11111111, 100011, 1110001, 1010011, 0, 11111111, 10000001},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 10000001},
		{0, 11000001, 1000010, 1000110, 1001110, 1001110, 11001111, 10000011},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f7(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10000100, 11000100, 1001100, 0, 11111111, 11},
		{0, 11111111, 11001100, 11000100, 11001100, 0, 11111111, 11},
		{0, 11111111, 1000110, 11100010, 10100110, 0, 11111111, 11},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 11},
		{0, 10000011, 10000100, 10001101, 10011101, 10011100, 10011111, 110},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f8(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1001, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10011000, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10001100, 11000100, 1001100, 0, 11111111, 110},
		{0, 11111111, 11001101, 11000101, 11001101, 1, 11111111, 110},
		{0, 111, 1001, 11011, 111010, 111000, 111111, 1100},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f9(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10011, 10011, 110011, 0, 11111111, 1100},
		{0, 11111111, 110001, 10011, 110010, 0, 11111111, 1100},
		{0, 11111111, 11001, 10001001, 10011001, 0, 11111111, 1100},
		{0, 11111110, 10011010, 10001010, 10011010, 10, 11111110, 1100},
		{0, 1111, 10010, 110111, 1110101, 1110000, 1111111, 11000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f10(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 100110, 100110, 1100110, 0, 11111111, 11000},
		{0, 11111111, 1100010, 100111, 1100101, 0, 11111111, 11000},
		{0, 11111111, 110011, 10011, 110011, 0, 11111111, 11000},
		{0, 11111100, 110100, 10100, 110100, 100, 11111100, 11000},
		{0, 11111, 100100, 1101110, 11101010, 11100000, 11111111, 110000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f11(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1001100, 1001100, 11001100, 0, 11111111, 110000},
		{0, 11111111, 11000100, 1001110, 11001010, 0, 11111111, 110000},
		{0, 11111111, 1100110, 100110, 1100110, 0, 11111111, 110000},
		{0, 11111000, 1101000, 101000, 1101001, 1001, 11111001, 110000},
		{0, 111111, 1001000, 11011100, 11010100, 11000000, 11111111, 1100000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f12(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 1100000},
		{0, 11111111, 10001000, 10011100, 10010100, 0, 11111111, 1100000},
		{0, 11111111, 11001100, 1001100, 11001100, 0, 11111111, 1100000},
		{0, 11110000, 11010000, 1010001, 11010011, 10011, 11110011, 1100000},
		{0, 1111111, 10010000, 10111000, 10101001, 10000000, 11111111, 11000000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f13(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 11000000},
		{0, 11111111, 10001, 111000, 101001, 0, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 11000000},
		{0, 11100000, 10100001, 10100011, 10100111, 100111, 11100111, 11000001},
		{0, 11111111, 100001, 1110001, 1010011, 0, 11111111, 10000000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f14(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 10000001},
		{0, 11111111, 100011, 1110001, 1010011, 0, 11111111, 10000001},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 10000001},
		{0, 11000001, 1000010, 1000110, 1001110, 1001110, 11001111, 10000011},
		{0, 11111111, 1000010, 11100010, 10100110, 0, 11111111, 1},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f15(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 11001100, 11000100, 11001100, 0, 11111111, 11},
		{0, 11111111, 1000110, 11100010, 10100110, 0, 11111111, 11},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 11},
		{0, 10000011, 10000100, 10001101, 10011101, 10011100, 10011111, 110},
		{0, 11111111, 10000100, 11000100, 1001100, 0, 11111111, 11},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f16(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10011000, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10001100, 11000100, 1001100, 0, 11111111, 110},
		{0, 11111111, 11001101, 11000101, 11001101, 1, 11111111, 110},
		{0, 111, 1001, 11011, 111010, 111000, 111111, 1100},
		{0, 11111111, 1001, 10001001, 10011001, 0, 11111111, 110},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f17(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 110001, 10011, 110010, 0, 11111111, 1100},
		{0, 11111111, 11001, 10001001, 10011001, 0, 11111111, 1100},
		{0, 11111110, 10011010, 10001010, 10011010, 10, 11111110, 1100},
		{0, 1111, 10010, 110111, 1110101, 1110000, 1111111, 11000},
		{0, 11111111, 10011, 10011, 110011, 0, 11111111, 1100},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f18(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1100010, 100111, 1100101, 0, 11111111, 11000},
		{0, 11111111, 110011, 10011, 110011, 0, 11111111, 11000},
		{0, 11111100, 110100, 10100, 110100, 100, 11111100, 11000},
		{0, 11111, 100100, 1101110, 11101010, 11100000, 11111111, 110000},
		{0, 11111111, 100110, 100110, 1100110, 0, 11111111, 11000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f19(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 11000100, 1001110, 11001010, 0, 11111111, 110000},
		{0, 11111111, 1100110, 100110, 1100110, 0, 11111111, 110000},
		{0, 11111000, 1101000, 101000, 1101001, 1001, 11111001, 110000},
		{0, 111111, 1001000, 11011100, 11010100, 11000000, 11111111, 1100000},
		{0, 11111111, 1001100, 1001100, 11001100, 0, 11111111, 110000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f20(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10001000, 10011100, 10010100, 0, 11111111, 1100000},
		{0, 11111111, 11001100, 1001100, 11001100, 0, 11111111, 1100000},
		{0, 11110000, 11010000, 1010001, 11010011, 10011, 11110011, 1100000},
		{0, 1111111, 10010000, 10111000, 10101001, 10000000, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 1100000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f21(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10001, 111000, 101001, 0, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 11000000},
		{0, 11100000, 10100001, 10100011, 10100111, 100111, 11100111, 11000001},
		{0, 11111111, 100001, 1110001, 1010011, 0, 11111111, 10000000},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 11000000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f22(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 100011, 1110001, 1010011, 0, 11111111, 10000001},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 10000001},
		{0, 11000001, 1000010, 1000110, 1001110, 1001110, 11001111, 10000011},
		{0, 11111111, 1000010, 11100010, 10100110, 0, 11111111, 1},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 10000001},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f23(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1000110, 11100010, 10100110, 0, 11111111, 11},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 11},
		{0, 10000011, 10000100, 10001101, 10011101, 10011100, 10011111, 110},
		{0, 11111111, 10000100, 11000100, 1001100, 0, 11111111, 11},
		{0, 11111111, 11001100, 11000100, 11001100, 0, 11111111, 11},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f24(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10001100, 11000100, 1001100, 0, 11111111, 110},
		{0, 11111111, 11001101, 11000101, 11001101, 1, 11111111, 110},
		{0, 111, 1001, 11011, 111010, 111000, 111111, 1100},
		{0, 11111111, 1001, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10011000, 10001001, 10011001, 0, 11111111, 110},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f25(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 11001, 10001001, 10011001, 0, 11111111, 1100},
		{0, 11111110, 10011010, 10001010, 10011010, 10, 11111110, 1100},
		{0, 1111, 10010, 110111, 1110101, 1110000, 1111111, 11000},
		{0, 11111111, 10011, 10011, 110011, 0, 11111111, 1100},
		{0, 11111111, 110001, 10011, 110010, 0, 11111111, 1100},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f26(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 110011, 10011, 110011, 0, 11111111, 11000},
		{0, 11111100, 110100, 10100, 110100, 100, 11111100, 11000},
		{0, 11111, 100100, 1101110, 11101010, 11100000, 11111111, 110000},
		{0, 11111111, 100110, 100110, 1100110, 0, 11111111, 11000},
		{0, 11111111, 1100010, 100111, 1100101, 0, 11111111, 11000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f27(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1100110, 100110, 1100110, 0, 11111111, 110000},
		{0, 11111000, 1101000, 101000, 1101001, 1001, 11111001, 110000},
		{0, 111111, 1001000, 11011100, 11010100, 11000000, 11111111, 1100000},
		{0, 11111111, 1001100, 1001100, 11001100, 0, 11111111, 110000},
		{0, 11111111, 11000100, 1001110, 11001010, 0, 11111111, 110000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f28(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 11001100, 1001100, 11001100, 0, 11111111, 1100000},
		{0, 11110000, 11010000, 1010001, 11010011, 10011, 11110011, 1100000},
		{0, 1111111, 10010000, 10111000, 10101001, 10000000, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 1100000},
		{0, 11111111, 10001000, 10011100, 10010100, 0, 11111111, 1100000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f29(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 11000000},
		{0, 11100000, 10100001, 10100011, 10100111, 100111, 11100111, 11000001},
		{0, 11111111, 100001, 1110001, 1010011, 0, 11111111, 10000000},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 11000000},
		{0, 11111111, 10001, 111000, 101001, 0, 11111111, 11000000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f30(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 10000000},
		{0, 11000001, 1000010, 1000110, 1001110, 1001110, 11001111, 10000011},
		{0, 11111111, 1000010, 11100010, 10100110, 0, 11111111, 1},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 10000001},
		{0, 11111111, 100011, 1110001, 1010011, 0, 11111111, 10000001},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f31(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 11},
		{0, 10000011, 10000100, 10001101, 10011101, 10011100, 10011111, 110},
		{0, 11111111, 10000100, 11000100, 1001100, 0, 11111111, 11},
		{0, 11111111, 11001100, 11000100, 11001100, 0, 11111111, 11},
		{0, 11111111, 1000110, 11100010, 10100110, 0, 11111111, 11},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f32(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111111, 11001101, 11000101, 11001101, 1, 11111111, 110},
		{0, 111, 1001, 11011, 111010, 111000, 111111, 1100},
		{0, 11111111, 1001, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10011000, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10001100, 11000100, 1001100, 0, 11111111, 110},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f33(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111110, 10011010, 10001010, 10011010, 10, 11111110, 1100},
		{0, 1111, 10010, 110111, 1110101, 1110000, 1111111, 11000},
		{0, 11111111, 10011, 10011, 110011, 0, 11111111, 1100},
		{0, 11111111, 110001, 10011, 110010, 0, 11111111, 1100},
		{0, 11111111, 11001, 10001001, 10011001, 0, 11111111, 1100},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f34(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111100, 110100, 10100, 110100, 100, 11111100, 11000},
		{0, 11111, 100100, 1101110, 11101010, 11100000, 11111111, 110000},
		{0, 11111111, 100110, 100110, 1100110, 0, 11111111, 11000},
		{0, 11111111, 1100010, 100111, 1100101, 0, 11111111, 11000},
		{0, 11111111, 110011, 10011, 110011, 0, 11111111, 11000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f35(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11111000, 1101000, 101000, 1101001, 1001, 11111001, 110000},
		{0, 111111, 1001000, 11011100, 11010100, 11000000, 11111111, 1100000},
		{0, 11111111, 1001100, 1001100, 11001100, 0, 11111111, 110000},
		{0, 11111111, 11000100, 1001110, 11001010, 0, 11111111, 110000},
		{0, 11111111, 1100110, 100110, 1100110, 0, 11111111, 110000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f36(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11110000, 11010000, 1010001, 11010011, 10011, 11110011, 1100000},
		{0, 1111111, 10010000, 10111000, 10101001, 10000000, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 1100000},
		{0, 11111111, 10001000, 10011100, 10010100, 0, 11111111, 1100000},
		{0, 11111111, 11001100, 1001100, 11001100, 0, 11111111, 1100000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f37(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11100000, 10100001, 10100011, 10100111, 100111, 11100111, 11000001},
		{0, 11111111, 100001, 1110001, 1010011, 0, 11111111, 10000000},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 11000000},
		{0, 11111111, 10001, 111000, 101001, 0, 11111111, 11000000},
		{0, 11111111, 10011001, 10011000, 10011001, 0, 11111111, 11000000},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f38(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 11000001, 1000010, 1000110, 1001110, 1001110, 11001111, 10000011},
		{0, 11111111, 1000010, 11100010, 10100110, 0, 11111111, 1},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 10000001},
		{0, 11111111, 100011, 1110001, 1010011, 0, 11111111, 10000001},
		{0, 11111111, 110011, 110001, 110011, 0, 11111111, 10000001},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f39(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 10000011, 10000100, 10001101, 10011101, 10011100, 10011111, 110},
		{0, 11111111, 10000100, 11000100, 1001100, 0, 11111111, 11},
		{0, 11111111, 11001100, 11000100, 11001100, 0, 11111111, 11},
		{0, 11111111, 1000110, 11100010, 10100110, 0, 11111111, 11},
		{0, 11111111, 1100110, 1100010, 1100110, 0, 11111111, 11},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

//Call with "set_matrix()":
void f40(){
	int a[15][8] = {
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000},
		{1001, 10100000, 10, 1000001, 101000, 10000010, 10000, 10100101},
		{100100, 11000, 1111110, 1101010, 1101010, 1101010, 1101010, 1111110},
		{10011001, 1011010, 111100, 11111111, 11111111, 111100, 1011010, 10011001},
		{100100, 11000, 1111110, 1100110, 1011010, 1011010, 1100110, 1111110},
		{0, 111, 1001, 11011, 111010, 111000, 111111, 1100},
		{0, 11111111, 1001, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10011000, 10001001, 10011001, 0, 11111111, 110},
		{0, 11111111, 10001100, 11000100, 1001100, 0, 11111111, 110},
		{0, 11111111, 11001101, 11000101, 11001101, 1, 11111111, 110},
		{100100, 11000, 1111110, 1011010, 1111110, 1111110, 1011010, 1111110},
		{11111111, 10111101, 11011011, 11100111, 11100111, 11011011, 10111101, 11111111},
		{100100, 11000, 1111110, 1000010, 1111110, 1000010, 1111110, 1111110},
		{1000101, 10000, 10, 1001000, 1, 10010000, 100010, 10001001},
		{11000, 111100, 1111110, 11000, 111100, 1111110, 11111111, 11000}
	};

	apel_for(a);
	graphicRandom_prima();
	graphicRandom_ultima();
	delay(50);
}

void graphicRandom_prima()
{
	// Is it time to animate?
	if (millis()-prevTimeAnim1 < 150) //150 random time
		return;
	prevTimeAnim1 = millis(); // starting point for next time

	// now run the animation
	mx.control(MD_MAX72XX::UPDATE, MD_MAX72XX::OFF);
	for (uint8_t i = 8; i < 16; i++)
		mx.setColumn(i, (uint8_t)random(255));
	mx.control(MD_MAX72XX::UPDATE, MD_MAX72XX::ON);
}

void graphicRandom_ultima()
{
	// Is it time to animate?
	if (millis()-prevTimeAnim2 < 150) //150 random time
		return;
	prevTimeAnim2 = millis(); // starting point for next time

	// now run the animation
	mx.control(MD_MAX72XX::UPDATE, MD_MAX72XX::OFF);
	for (uint8_t i = 104; i < 112; i++)
		mx.setColumn(i, (uint8_t)random(255));
	mx.control(MD_MAX72XX::UPDATE, MD_MAX72XX::ON);
}

void apel_for(int a[15][8])
{
	for (int i = 0; i < 15; i++) {
		if(i != 1 && i != 13;) //pt random
			for (int j = 0; j < 8; j++) {
				for (int k = 8+8 * i-1; k > 8 * i-1; k--) {
					mx.setPoint(j, k, a[i][j] % 10);
					a[i][j] /= 10;
				}
			}
	}
}


void setup() {
	// Intialize the object
	mx.begin();
	// Set the intensity (brightness) of the display (0-15)
	mx.control(MD_MAX72XX::INTENSITY, 7);
	// Clear the display
	mx.clear();
	// Set the matrix to the patterns
//  set_matrix();
}
void loop() {
	f1();
	f2();
	f3();
	f4();
	f5();
	f6();
	f7();
	f8();
	f9();
	f10();
	f11();
	f12();
	f13();
	f14();
	f15();
	f16();
	f17();
	f18();
	f19();
	f20();
	f21();
	f22();
	f23();
	f24();
	f25();
	f26();
	f27();
	f28();
	f29();
	f30();
	f31();
	f32();
	f33();
	f34();
	f35();
	f36();
	f37();
	f38();
	f39();
	f40();
}
